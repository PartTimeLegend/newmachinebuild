name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run script
      run: .\NewMachineSetup.ps1
      shell: powershell
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
      id: extract_branch  
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag parttimelegend/newmachinebuild:latest --no-cache
    - name: Docker image list
      run: docker images
    - name: Docker Login
      run: docker login --username ${{secrets.DOCKERHUB_USERNAME}}  --password ${{secrets.DOCKERHUB_TOKEN}} 
      if: steps.extract_branch.outputs.branch == 'master'
    - name: Docker Push
      run: docker push parttimelegend/newmachinebuild
      if: steps.extract_branch.outputs.branch == 'master'

  codacy-security-scan:
    name: Codacy Security Scan
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout code
        uses: actions/checkout@v2
      # Execute Codacy Analysis CLI and generate a SARIF output with the security issues identified during the analysis
      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@1.1.0
        with:
          # Check https://github.com/codacy/codacy-analysis-cli#project-token to get your project token from your Codacy repository
          # You can also omit the token and run the tools that support default configurations
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          verbose: true
          output: results.sarif
          format: sarif
          # Adjust severity of non-security issues
          gh-code-scanning-compat: true
          # Force 0 exit code to allow SARIF file generation
          # This will handover control about PR rejection to the GitHub side
          max-allowed-issues: 2147483647
      # Upload the SARIF file generated in the previous step
      - name: Upload SARIF results file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: results.sarif
